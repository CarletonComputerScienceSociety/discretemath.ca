<?xml version="1.0" encoding="utf-8"?>

<question type="MultipleChoice">
	<![CDATA[
		The Fibonacci numbers are defined as follows: $f_0 = 0$, $f_1 = 1$, and $f_n = f_{n-1} + f_{n-2}$ for
		$n \geq 2$. <br>
		
		Consider again the recursive algorithm $\Fib$, which takes as input an integer $n \geq 0$:
		
		<p>
			$\mathbf{Algorithm}\ \Fib(n)\mathrm{:}$ <br>
			$\mathbf{if}\ n = 0\ \mathrm{or}\ n = 1$ <br>
			$\mathbf{then}\ f = n$ <br>
			$\mathbf{else}\ f = \Fib(n - 1) + \Fib(n - 2)$ <br>
			$\mathbf{endif};$ <br>
			$\mathbf{return}\ f$ <br>
		</p>
		
		For $n \geq 3$, run algorithm $\Fib(n)$ and let $a_n$ be the number of times that $\Fib(1)$ is called. <br>
		Which of the following is true?
	]]>
	<option correct="true">for all $n \geq 3$, $a_n = f_n$</option>
	<option correct="false">for all $n \geq 3$, $a_n = f_{n-1}$</option>
	<option correct="false">for all $n \geq 3$, $a_n = f_{n+1}$</option>
	<option correct="false">for all $n \geq 3$, $a_n = f_n + 1$</option>
</question>
